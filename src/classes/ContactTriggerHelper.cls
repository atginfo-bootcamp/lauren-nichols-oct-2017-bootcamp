public with sharing class ContactTriggerHelper {

	public static void handleAFterInsert(List<Contact> contacts){
		// if contact has an account assigned, update number of contacts on account
		List<Account> accounts = queryAccountsFromContacts(contacts);

		updateAccountNumOfContacts(accounts);

	}

	public static void handleAfterUpdate(List<Contact> contacts, Map<Id, Contact> oldContactMap){
		// loop through old contacts
		// check if accountId was changed
			// 1) null --> not null: update account (number of contacts)
			// 2) not null --> null: update the old account (number of contacts)
			// 3) not null --> not null (contact assigned to different account): update both accounts 

			Set<Id> accountIds = new Set<Id>();

			for(Contact contact : contacts){
				Contact oldContact = oldContactMap.get(contact.Id);
				if(contact.AccountId != oldContact.AccountId){
					// the account id was changed!

					if(contact.AccountId != null){
						accountIds.add(contact.AccountId);
					}

					if(oldContact.AccountId != null){
						accountIds.add(oldContact.AccountId);
					}

				}
			}

			List<Account> accounts = queryAccounts(accountIds);

			updateAccountNumOfContacts(accounts);
			
	}

	public static void handleAfterDelete(List<Contact> contacts){

	}

	private static List<Account> queryAccountsFromContacts(List<Contact> contacts){

		
		Set<Id> accountIds = new Set<Id>();

		for(Contact contact : contacts){
			if(contact.accountId != null){
				accountIds.add(contact.accountId);
			}
		}

		return queryAccounts(accountIds);

	}	


	private static List<Account> queryAccounts(Set<Id> accountIds){

		List<Account> accounts = new List<Account>();

		// accountIds.size() > 0
		if(!accountIds.isEmpty()){
			accounts = [SELECT Id, Current_Number_of_Contacts__c,
				(SELECT Id FROM Contacts) 
			FROM Account 
			WHERE Id IN :accountIds];
		}

		return accounts;

	}


	private static void updateAccountNumOfContacts(List<Account> accounts){


			if(accounts.size() > 0){

				for(Account account : accounts){
					Integer numberOfContacts = account.Contacts.size();
					account.Current_Number_of_Contacts__c = numberOfContacts;
				}

			update accounts;
		}
	}


}